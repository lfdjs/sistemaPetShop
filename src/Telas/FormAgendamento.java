/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import DAO.AgendaDAO;
import DAO.PetDAO;
import DAO.ResponsavelDAO;
import DAO.TipoServicoDAO;
import Entidades.Agenda;
import Entidades.Pet;
import Entidades.Responsavel;
import Entidades.TipoServico;
import java.sql.Date;
import java.sql.SQLException;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Silva
 */
public class FormAgendamento extends javax.swing.JFrame {

    /**
     * Creates new form Agendamento
     *
     * @throws java.sql.SQLException
     */
    public FormAgendamento() throws SQLException {
        initComponents();
        exibirTipoServico();//Exibe os itens do combobox tipo de seviço
        exibirPet();//Exibe os itens do combobox pet
        exibirResponsaveis();//Exibe os itens do combobox responsaveis
        exibirAgenda();//exibe a tabela da agenda
        btnAlterar.setVisible(false);//esconde o botão de alterar
        btnExcluir.setVisible(false);// esconde o botão de excluir
        idAgenda.setVisible(false);//esconde o label do id
    }

    AgendaDAO agendadao = new AgendaDAO();//Instância da classe AgendaDAO, para delegação de seus métodos CRUD
    Agenda agenda = new Agenda();//Instância da classe Agenda, para delegação de seus métodos getters e setters

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbNomeResponsavel = new javax.swing.JLabel();
        cbxNomeResponsavel = new javax.swing.JComboBox<>();
        lbNomeAnimal = new javax.swing.JLabel();
        lbData = new javax.swing.JLabel();
        lbHorario = new javax.swing.JLabel();
        lbTipoServico = new javax.swing.JLabel();
        cbxNomeAnimal = new javax.swing.JComboBox<>();
        tbData = new javax.swing.JFormattedTextField();
        tbHorario = new javax.swing.JFormattedTextField();
        cbxTipoServico = new javax.swing.JComboBox<>();
        btnAgendar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAgenda = new javax.swing.JTable();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        idAgenda = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 145, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 131, Short.MAX_VALUE)
        );

        lbNomeResponsavel.setText("Nome do Responsável:");

        lbNomeAnimal.setText("Nome do Animal:");

        lbData.setText("Data:");

        lbHorario.setText("Horário:");

        lbTipoServico.setText("Tipo do Serviço:");

        cbxNomeAnimal.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                cbxNomeAnimalComponentShown(evt);
            }
        });

        btnAgendar.setBackground(new java.awt.Color(0, 153, 153));
        btnAgendar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAgendar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgendar.setText("Agendar");
        btnAgendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgendarActionPerformed(evt);
            }
        });

        tblAgenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Data do Atendimento", "Hora do Atendimento", "ID do Pet", "ID do Tipo de Serviço", "ID do Responsavel"
            }
        ));
        tblAgenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAgendaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAgenda);

        btnAlterar.setBackground(new java.awt.Color(0, 153, 153));
        btnAlterar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAlterar.setForeground(new java.awt.Color(255, 255, 255));
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setBackground(new java.awt.Color(0, 153, 153));
        btnExcluir.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnExcluir.setForeground(new java.awt.Color(255, 255, 255));
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jLabel1.setText("Agendamento");

        idAgenda.setText("id");

        btnVoltar.setBackground(new java.awt.Color(0, 153, 153));
        btnVoltar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnVoltar.setForeground(new java.awt.Color(255, 255, 255));
        btnVoltar.setText("Voltar a Tela inicial");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        jLabel2.setText("aaaa-mm-dd");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/img/vet.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idAgenda)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(jLabel1))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(237, 237, 237)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVoltar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAgendar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAlterar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnExcluir))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbNomeResponsavel)
                                    .addComponent(lbNomeAnimal)
                                    .addComponent(lbData)
                                    .addComponent(lbHorario)
                                    .addComponent(lbTipoServico))
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbxNomeResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbxNomeAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tbHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbxTipoServico, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tbData, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)))
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbNomeResponsavel)
                                .addGap(18, 18, 18)
                                .addComponent(lbNomeAnimal)
                                .addGap(18, 18, 18)
                                .addComponent(lbData)
                                .addGap(18, 18, 18)
                                .addComponent(lbHorario)
                                .addGap(18, 18, 18)
                                .addComponent(lbTipoServico))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbxNomeResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbxNomeAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tbData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tbHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbxTipoServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgendar)
                            .addComponent(btnAlterar)
                            .addComponent(btnExcluir)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnVoltar)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(idAgenda)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxNomeAnimalComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_cbxNomeAnimalComponentShown
    }//GEN-LAST:event_cbxNomeAnimalComponentShown

    private void btnAgendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgendarActionPerformed
        // Ação do botão agendar:

        try {
            //Aqui verifica se algum campo está em branco e caso esteja ele mostra uma mensagem e direciona o ponteiro ao campo de texto respectivo
            if (tbData.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Favor, digite a data do atendimento");
                tbData.grabFocus();
            } else if (tbHorario.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Favor, digite o horário do atendimento");
                tbHorario.grabFocus();
            } else {
                /*
                Caso nenhum dos campos esteja em branco aqui ele faz 
                o procedimento de agendamento, pegando os dados informados
                 */

                /* 
                Como não encontramos nenhuma maneira breve de mostrar apenas
                o nome mas ter como valor setado o id, fizemos esta gambiarra intergalática 
                pra fazer isso funcionar, convertendo um cast de string de um combobox em int
                por favor, peço para que não se assustem.
                 */
                agenda.setIdResponsavel(Integer.parseInt((String) String.valueOf(cbxNomeResponsavel.getSelectedItem()).substring(0, 1)));
                agenda.setIdPet(Integer.parseInt((String) String.valueOf(cbxNomeAnimal.getSelectedItem()).substring(0, 1)));
                agenda.setIdTipoServico(Integer.parseInt((String) String.valueOf(cbxTipoServico.getSelectedItem()).substring(0, 1)));
                agenda.setDataAtendimento(tbData.getText());
                agenda.setHoraAtendimento(tbHorario.getText());
                agendadao.cadastrar(agenda);

                JOptionPane.showMessageDialog(null, "Agendamento cadastrado com sucesso!");
                exibirAgenda();//Atualiza a tabela agenda depois do cadastro
                limparCampos();//Limpa os campos preenchidos após o cadastro
            }

        } catch (Exception e) {
            System.out.println(agenda.getIdResponsavel());
            System.out.println(agenda.getIdPet());
            System.out.println(agenda.getIdTipoServico());

            JOptionPane.showMessageDialog(null, "Ocorreu o seguinte erro: " + e.getLocalizedMessage());//Mostra o erro localizado
            e.printStackTrace();//Mostra o mesmo erro, porém detalhado no console
        }


    }//GEN-LAST:event_btnAgendarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // Ação do botão de excluir:

        //Questiona ao usuário se deseja realmente excluir o cadastro
        int conf = JOptionPane.showConfirmDialog(null, "Deseja Realmente excluir o cadastro?", "Atenção", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
        if (conf == 0) {
            //Caso positivo
            agenda.setIdAgenda(Integer.parseInt(idAgenda.getText()));//Seta o id da agenda na label id agenda, que está oculta
            try {
                //Faz o procedmento de exclusão da agenda
                agendadao.excluir(agenda);
                JOptionPane.showMessageDialog(null, "Operação realizada com sucesso");
                limparCampos();//Limpa os campos que foram preenchidos após selecionar o dado a ser excluido na tabela
                exibirAgenda();// Atualiza a tabela da agenda
                btnAlterar.setVisible(false);//esconde o botão de alterar
                btnExcluir.setVisible(false);// esconde o botão de excluir
                idAgenda.setVisible(false);//esconde o label do id
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            //Caso negativo
            JOptionPane.showMessageDialog(null, "O procedimento de exclusão foi cancelado!");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void tblAgendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAgendaMouseClicked
        // Ação do clique em qualquer item da tabela:
        exibirAgendaFiltro(); //exibe o filtro dos dados e seta os campos de texto e comboboxes
        btnAlterar.setVisible(true);//Exibe o botão de alterar
        btnExcluir.setVisible(true);//Exibe o botão de excluir
        btnAgendar.setVisible(false);//Esconde o botão de agendar

    }//GEN-LAST:event_tblAgendaMouseClicked

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // Ação do botão de voltar a tela inicial:
        TelaInicial inicio = new TelaInicial();//Instancia uma nova tela inicial
        this.setVisible(false);//fecha esta tela
        inicio.setVisible(true);//Abre a tela Inicial
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // Ação do botão de cadatsrar:
        try {
            //Aqui ele pega os dados informados
            agenda.setIdResponsavel(Integer.parseInt((String) String.valueOf(cbxNomeResponsavel.getSelectedItem()).substring(0, 1)));
            agenda.setIdPet(Integer.parseInt((String) String.valueOf(cbxNomeAnimal.getSelectedItem()).substring(0, 1)));
            agenda.setIdTipoServico(Integer.parseInt((String) String.valueOf(cbxTipoServico.getSelectedItem()).substring(0, 1))/*cbxTipoServico.getSelectedItem().toString().charAt(0)*/);
            agenda.setDataAtendimento(tbData.getText());
            agenda.setHoraAtendimento(tbHorario.getText());
            agenda.setIdAgenda(Integer.parseInt(idAgenda.getText()));
            agendadao.alterar(agenda);//Realiza a função de cadastrar, chamando o método da DAO.
            JOptionPane.showMessageDialog(null, "Operação realizada com sucesso");
            limparCampos();// Limpa os campos
            exibirAgenda();// Atualiza a tabela agenda
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_btnAlterarActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // Ação do clique em qualquer lugar em branco do formulario:

        btnAlterar.setVisible(false);// Esconde o botão de alterar
        btnExcluir.setVisible(false);// Esconde o botão de Excluir
        btnAgendar.setVisible(true);// Mostra o botão de Agendar
    }//GEN-LAST:event_formMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FormAgendamento().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(FormAgendamento.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private void exibirTipoServico() throws SQLException {
        try {
            //Exibe os tipos de serviço no combobox tipo de serviço
            TipoServicoDAO tiposervicodao = new TipoServicoDAO();
            for (TipoServico tiposerv : tiposervicodao.tipservs()) {
                cbxTipoServico.addItem(tiposerv.toString());

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocorreu o seguinte erro: " + e.getMessage());
        }
    }

    private void exibirPet() throws SQLException {
        try {
            //Exibe os nomes dos pets no combobox pets
            PetDAO petdao = new PetDAO();// instancia a classe PetDAO sendo petdao uma variavel do tipo PetDAO
            for (Pet pet : petdao.pets()) {
                cbxNomeAnimal.addItem(pet.toString());

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocorreu o seguinte erro: " + e.getMessage());
        }
    }

    private void exibirResponsaveis() throws SQLException {
        try {
            //Exibe os nomes dos responsaveis no combobox responsaveis
            ResponsavelDAO respdao = new ResponsavelDAO();// instancia a classe ResponsavelDAO sendo respdao uma variavel do tipo ResponsavelDAO 
            for (Responsavel resp : respdao.responsaveis()) {
                cbxNomeResponsavel.addItem(resp.toString());

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocorreu o seguinte erro: " + e.getMessage());
        }
    }

    private void exibirAgenda() throws SQLException {
        try {
            //Declara uma nova variavel do tipo DefaultTableModel que recebe um cast de (DefaultTableModel) na tabela agenda, pegando o seu modelo.
            DefaultTableModel tabelaAgenda = (DefaultTableModel) tblAgenda.getModel();

            tabelaAgenda.setRowCount(0);//seta a contagem de linhas em 0

            for (Iterator<Object> it = agendadao.exibir().iterator(); it.hasNext();) {
            //Iterador, que tem como argumentos o metodo exibir agenda, e adiciona dados a cada linha constante na tabela agenda
                Agenda agenda = (Agenda) it.next();//Cast de agenda no iterador
                tabelaAgenda.addRow(new Object[]{
                    agenda.getIdAgenda(),
                    agenda.getDataAtendimento(),
                    agenda.getHoraAtendimento(),
                    agenda.getIdPet(),
                    agenda.getIdTipoServico(),
                    agenda.getIdResponsavel()
                });

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocorreu o seguinte erro no formulário da agenda: " + e.getLocalizedMessage());
            e.printStackTrace();
            throw e;
        }
    }

    private void exibirAgendaFiltro() {
        //Aqui são setados os campos de texto e comboboxes mediante o item selecionado na tabela
        tbData.setText(tblAgenda.getValueAt(tblAgenda.getSelectedRow(), 1).toString());
        tbHorario.setText(tblAgenda.getValueAt(tblAgenda.getSelectedRow(), 2).toString());
        cbxNomeAnimal.setSelectedItem(tblAgenda.getValueAt(tblAgenda.getSelectedRow(), 3).toString());
        cbxTipoServico.setSelectedItem(tblAgenda.getValueAt(tblAgenda.getSelectedRow(), 4).toString());
        cbxNomeResponsavel.setSelectedItem(tblAgenda.getValueAt(tblAgenda.getSelectedRow(), 5).toString());
        idAgenda.setText(tblAgenda.getValueAt(tblAgenda.getSelectedRow(), 0).toString());
    }

    private void limparCampos() {
        //Metodo de limpar os campos de texto
        tbData.setText("");
        tbHorario.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgendar;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> cbxNomeAnimal;
    private javax.swing.JComboBox<String> cbxNomeResponsavel;
    private javax.swing.JComboBox<String> cbxTipoServico;
    private javax.swing.JLabel idAgenda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbData;
    private javax.swing.JLabel lbHorario;
    private javax.swing.JLabel lbNomeAnimal;
    private javax.swing.JLabel lbNomeResponsavel;
    private javax.swing.JLabel lbTipoServico;
    private javax.swing.JFormattedTextField tbData;
    private javax.swing.JFormattedTextField tbHorario;
    private javax.swing.JTable tblAgenda;
    // End of variables declaration//GEN-END:variables
}
